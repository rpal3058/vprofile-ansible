- hosts: localhost
  gather_facts: False
  BastionUserData: "{{ lookup('file', './EC2UserData/bastion.sh') }}"
  tasks:
    - name: Importing Bastion variables 
      include_vars: 
        file: ./var/bastion_variable.yml
        name: bastionVar

    - name: Importing resource id 
      include_vars: 
        file: ./var/resource_id.yml
        name: resources

    - name: create an security group for the bastion instance to ssh into
      ec2_group:
        name: "{{ bastionVar.sgName }}"
        description: sg for bastion EC2 instance
        vpc_id: "{{resources.VPC}}"
        region: "{{resources.Region}}"
        tags:
          Name: vprofile-bastion
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22          
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22         
      register: sgOut
    
    - name: remove key pair by name if it exits
      ec2_key:
        name: bastion_keypair
        state: absent
        region: "{{resources.Region}}"

    - name: create an key pair using whihc my IP can ssh into the ec2
      ec2_key:
        state: present
        region: "{{resources.Region}}"
        name: bastion_keypair
      register: keyOut

    - name: create an EC2 instance for the bastion through which myIP can ssh into
      ec2_instance:
        key_name: "{{keyOut.key.name}}"
        wait: yes
        wait_timeout: 300
        instance_type: t2.micro
        region: "{{resources.Region}}"
        image_id: "{{bastionVar.ami}}"
        security_group: "{{sgOut.group_id}}"
        vpc_subnet_id: "{{resources.pubSub1Out.subnet.id}}"
        exact_count: 1
        tags: 
          Name: "vprofile-bastion-instance"
          Project: Vprofile
        user_data: "{{ BastionUserData }}"  
      register: bastionInstanceOut 

    - name: setting fact for this playbook  
      set_fact:
        sgID: "{{sgOut.group_id}}"
        bastionInstanceID: "{{bastionInstanceOut.tagged_instances[0].id}}"
        cacheable: yes

    - name: copying the private key to ssh into bastion
      ansible.builtin.copy:  
        content: "{{keyOut.key.private_key}}"
        dest: ./bastion_keypair.pem

    - name: Insert/Update bastion id to the resource id text
      blockinfile:
        path: var/resource_id.yml
        block: |
          BastionSG_id: {{sgOut.group_id}}
          BastionSG_name: {{sgOut.group_name}}
          BastionSG_accID: {{sgOut.owner_id}}
          BastionHost: {{bastionInstanceOut.tagged_instances[0].id}}

